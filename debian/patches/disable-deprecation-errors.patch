Author: Alberto Mardegan
Subject: Disable deprecation erros
Origin: https://gitlab.com/accounts-sso/libaccounts-glib/merge_requests/6
Bug-accounts-sso: https://gitlab.com/accounts-sso/libaccounts-glib/issues/1

--- a/libaccounts-glib/Makefile.am
+++ b/libaccounts-glib/Makefile.am
@@ -9,7 +9,7 @@ libaccounts_glib_la_CPPFLAGS = \
 libaccounts_glib_la_CFLAGS = \
 	$(LIBACCOUNTS_CFLAGS) \
 	$(COVERAGE_CFLAGS) \
-	-Wall -Werror
+	-Wall -Werror -Wno-error=deprecated-declarations
 libaccounts_glib_la_LIBADD = \
 	$(LIBACCOUNTS_LIBS)
 libaccounts_glib_la_LDFLAGS = \

diff --git a/libaccounts-glib/ag-account.c b/libaccounts-glib/ag-account.c
index 93edb32..165ae25 100644
--- a/libaccounts-glib/ag-account.c
+++ b/libaccounts-glib/ag-account.c
@@ -695,7 +695,9 @@ _ag_account_store_completed (AgAccount *account, AgAccountChanges *changes)
 {
     AgAccountPrivate *priv = account->priv;
 
+G_GNUC_BEGIN_IGNORE_DEPRECATIONS
     g_simple_async_result_complete_in_idle (priv->store_async_result);
+G_GNUC_END_IGNORE_DEPRECATIONS
     g_clear_object (&priv->store_async_result);
 
     _ag_account_changes_free (changes);
@@ -2485,28 +2487,34 @@ ag_account_store_async (AgAccount *account, GCancellable *cancellable,
     if (G_UNLIKELY (priv->store_async_result != NULL))
     {
         g_critical ("ag_account_store_async called again before completion");
+G_GNUC_BEGIN_IGNORE_DEPRECATIONS
         g_simple_async_report_error_in_idle ((GObject *)account,
                                              callback, user_data,
                                              AG_ACCOUNTS_ERROR,
                                              AG_ACCOUNTS_ERROR_STORE_IN_PROGRESS,
                                              "Store operation already "
                                              "in progress");
+G_GNUC_END_IGNORE_DEPRECATIONS
         return;
     }
 
+G_GNUC_BEGIN_IGNORE_DEPRECATIONS
     priv->store_async_result =
         g_simple_async_result_new ((GObject *)account,
                                    callback, user_data,
                                    ag_account_store_async);
     g_simple_async_result_set_check_cancellable (priv->store_async_result,
                                                  cancellable);
+G_GNUC_END_IGNORE_DEPRECATIONS
     g_object_add_weak_pointer ((GObject *)priv->store_async_result,
                                (gpointer *)&priv->store_async_result);
 
     if (G_UNLIKELY (priv->changes == NULL))
     {
         /* Nothing to do: invoke the callback immediately */
+G_GNUC_BEGIN_IGNORE_DEPRECATIONS
         g_simple_async_result_complete_in_idle (priv->store_async_result);
+G_GNUC_END_IGNORE_DEPRECATIONS
         g_clear_object (&priv->store_async_result);
         return;
     }
@@ -2537,7 +2545,9 @@ ag_account_store_finish (AgAccount *account, GAsyncResult *res,
     g_return_val_if_fail (AG_IS_ACCOUNT (account), FALSE);
 
     async_result = (GSimpleAsyncResult *)res;
+G_GNUC_BEGIN_IGNORE_DEPRECATIONS
     return !g_simple_async_result_propagate_error (async_result, error);
+G_GNUC_END_IGNORE_DEPRECATIONS
 }
 
 /**

diff --git a/libaccounts-glib/ag-manager.c b/libaccounts-glib/ag-manager.c
index 3cf02e1..8e6a891 100644
--- a/libaccounts-glib/ag-manager.c
+++ b/libaccounts-glib/ag-manager.c
@@ -187,6 +187,7 @@ on_dbus_store_done (GObject *object, GAsyncResult *res,
     GVariant *result;
     GError *error_int = NULL;
 
+G_GNUC_BEGIN_IGNORE_DEPRECATIONS
     result = g_dbus_connection_call_finish (conn, res, &error_int);
     if (G_UNLIKELY (error_int))
     {
@@ -221,6 +222,7 @@ on_dbus_store_done (GObject *object, GAsyncResult *res,
 
     g_simple_async_result_complete_in_idle (async_result);
     g_object_unref (async_result);
+G_GNUC_END_IGNORE_DEPRECATIONS
 }
 
 static void
@@ -233,11 +235,13 @@ ag_manager_store_dbus_async (AgManager *manager, AgAccount *account,
     GVariant *dbus_changes;
 
     if (G_UNLIKELY (!priv->use_dbus)) {
+G_GNUC_BEGIN_IGNORE_DEPRECATIONS
         g_simple_async_result_set_error (async_result,
                                          AG_ACCOUNTS_ERROR,
                                          AG_ACCOUNTS_ERROR_READONLY,
                                          "DB read-only and D-Bus disabled");
         g_simple_async_result_complete_in_idle (async_result);
+G_GNUC_END_IGNORE_DEPRECATIONS
         g_object_unref (async_result);
         return;
     }
@@ -1104,7 +1108,9 @@ exec_transaction_idle (StoreCbData *sd)
 finish:
     if (error != NULL)
     {
+G_GNUC_BEGIN_IGNORE_DEPRECATIONS
         g_simple_async_result_take_error (sd->async_result, error);
+G_GNUC_END_IGNORE_DEPRECATIONS
     }
 
     _ag_account_store_completed (account, sd->changes);
@@ -2409,7 +2415,9 @@ _ag_manager_exec_transaction (AgManager *manager, const gchar *sql,
 finish:
     if (error != NULL)
     {
+G_GNUC_BEGIN_IGNORE_DEPRECATIONS
         g_simple_async_result_take_error (async_result, error);
+G_GNUC_END_IGNORE_DEPRECATIONS
     }
 
     _ag_account_store_completed (account, changes);
@@ -2470,9 +2478,11 @@ ag_manager_store_local_async (AgManager *manager, AgAccount *account,
     sql = _ag_account_get_store_sql (account, &error);
     if (G_UNLIKELY (error))
     {
+G_GNUC_BEGIN_IGNORE_DEPRECATIONS
         g_simple_async_result_take_error (async_result,
                                           error);
         g_simple_async_result_complete_in_idle (async_result);
+G_GNUC_END_IGNORE_DEPRECATIONS
         g_object_unref (async_result);
         return;
     }
